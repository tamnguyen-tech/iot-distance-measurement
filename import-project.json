[
    {
        "id": "e00eee033140acab",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "27237f8eab3d7eb5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "2",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3ab9d402334ff51f",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Impact,Impact,Charcoal,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Impact,Impact,Charcoal,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "35d9cdb8b40f4506",
        "type": "ui_tab",
        "name": "Monitor",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "37653b90a5c83d94",
        "type": "ui_group",
        "name": "Configure",
        "tab": "35d9cdb8b40f4506",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c714a8654f0bc7c",
        "type": "ui_group",
        "name": "Data",
        "tab": "35d9cdb8b40f4506",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "051139cd6d575ceb",
        "type": "ui_group",
        "name": "Error comparison",
        "tab": "35d9cdb8b40f4506",
        "order": 3,
        "disp": true,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "21426f026d717440",
        "type": "ui_group",
        "name": "Comparative Chart",
        "tab": "35d9cdb8b40f4506",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b82e1659583a176",
        "type": "ui_chart",
        "z": "e00eee033140acab",
        "name": "Comparative chart",
        "group": "21426f026d717440",
        "order": 1,
        "width": 18,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for valid data arrives",
        "dot": false,
        "ymin": "10",
        "ymax": "30",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#03b017",
            "#ef1515",
            "#0f17ff",
            "#800080",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "09f6f8678f41dcc3",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "Simple Moving Average",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Simple Moving Average",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "7b82e1659583a176"
            ]
        ]
    },
    {
        "id": "6d9d529d3c1c48f4",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "Measured data",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Measured data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "7b82e1659583a176"
            ]
        ]
    },
    {
        "id": "5240b754456c047f",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Round",
        "func": "msg.payload = Math.round(msg.payload * 100) / 100;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "3eb1998e8f7315b3"
            ]
        ]
    },
    {
        "id": "4a4727674ce2eeaa",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "SIMPLE MOVING AVERAGE",
        "func": "if (!context.array) {\n    context.array = [];\n    let n = 30;\n    flow.set(\"mau\",n);\n}\n\nfunction avg(array){\n    let sum = 0;\n    let i = 0;\n    while(i < array.length){\n        sum += array[i];\n        i++;\n    }\n    return sum/array.length;\n}\nif(context.array.length < flow.get(\"mau\")){\n    context.array.push(msg.payload);\n}\nmsg.array = context.array;\nif(context.array.length >= flow.get(\"mau\")){\n    msg.avg = avg(context.array);\n    context.array.shift();\n}\nmsg.payload = msg.avg;\nif(msg.payload == undefined){\n    msg.payload = null;\n}\nflow.set(\"sma\",msg.avg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 320,
        "wires": [
            [
                "867e8c225cd4514e",
                "09f6f8678f41dcc3",
                "22cea005c351a97a"
            ]
        ]
    },
    {
        "id": "b24e2cbad62e2f95",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "TIME, CHANGE DATA, ERROR",
        "func": "function random(a, b) {\n    return Math.random() * (b - a) + a;\n}\nmsg.payload = Number(msg.payload);\nmsg.payload = msg.payload + random(-1,1);\n\nmsg.time = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 240,
        "wires": [
            [
                "4a4727674ce2eeaa",
                "5240b754456c047f",
                "6d9d529d3c1c48f4",
                "78cc846139143c46",
                "aa53d541201d504e"
            ]
        ]
    },
    {
        "id": "867e8c225cd4514e",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "ROUND",
        "func": "if(msg.payload == null){\n    msg.payload = null;\n}\nelse{\n    msg.payload = Math.round(msg.payload * 100) / 100;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 400,
        "wires": [
            [
                "55f6148521c7f544",
                "35285ac0b95c6541",
                "20f1e95a71896bc7"
            ]
        ]
    },
    {
        "id": "09d376b49cf54e17",
        "type": "mqtt in",
        "z": "e00eee033140acab",
        "name": "",
        "topic": "distance",
        "qos": "2",
        "datatype": "auto",
        "broker": "27237f8eab3d7eb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "b24e2cbad62e2f95"
            ]
        ]
    },
    {
        "id": "55f6148521c7f544",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "EXPORT TO MONGODB",
        "func": "msg.url = \"mongodb+srv://nguyenviettam2905:Tam123456@nvtcluster.rlnbv.mongodb.net/NVTdatabase?retryWrites=true&w=majority\";\nmsg.db_name = \"NVTdatabase\";\nmsg.db_collection = \"distance\";\n\nmsg.payload = {\n \"Moving average\" : msg.payload,\n \"Average with k\" : flow.get(\"avg_k\"),\n \"Time\" : msg.time\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 500,
        "wires": [
            [
                "547862c4ba8dbdf5"
            ]
        ]
    },
    {
        "id": "e05a719c0114c6a0",
        "type": "debug",
        "z": "e00eee033140acab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 620,
        "wires": []
    },
    {
        "id": "547862c4ba8dbdf5",
        "type": "insertOne",
        "z": "e00eee033140acab",
        "name": "Insert value to MongoDB",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "e05a719c0114c6a0"
            ]
        ]
    },
    {
        "id": "35285ac0b95c6541",
        "type": "mqtt out",
        "z": "e00eee033140acab",
        "name": "",
        "topic": "value",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "27237f8eab3d7eb5",
        "x": 410,
        "y": 560,
        "wires": []
    },
    {
        "id": "78cc846139143c46",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "AVERAGE METHOD",
        "func": "if (!context.k) {\n    context.k = 1;\n    context.result = 0;\n}\nmsg.k = context.k++;\nif(msg.k >= 30) {\n    context.k = 1;\n}\nlet a = context.result*((msg.k-1)/msg.k) + msg.payload*(1/msg.k);\nmsg.payload = a;\nflow.set(\"avg_method\",a);\ncontext.result = a;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "98308c6987ab9cbe",
                "1c45574e4573da00"
            ]
        ]
    },
    {
        "id": "cba6505a34a4cc2f",
        "type": "ui_text",
        "z": "e00eee033140acab",
        "group": "37653b90a5c83d94",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sample:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 560,
        "wires": []
    },
    {
        "id": "a69b9a743d88753e",
        "type": "ui_chart",
        "z": "e00eee033140acab",
        "name": "Error comparation chart",
        "group": "051139cd6d575ceb",
        "order": 1,
        "width": 14,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for valid data arrives",
        "dot": false,
        "ymin": "-2",
        "ymax": "2",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ef1515",
            "#0f17ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "22cea005c351a97a",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Display sample",
        "func": "msg.payload = flow.get(\"mau\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 500,
        "wires": [
            [
                "cba6505a34a4cc2f"
            ]
        ]
    },
    {
        "id": "98308c6987ab9cbe",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "Average method",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Average method",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "7b82e1659583a176"
            ]
        ]
    },
    {
        "id": "94042a5fcee74496",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "True value",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "True value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "7b82e1659583a176"
            ]
        ]
    },
    {
        "id": "aa53d541201d504e",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "True value",
        "func": "msg.payload = flow.get(\"truevalue\");\nmsg.trueval = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "94042a5fcee74496",
                "e330d238a52c706a"
            ]
        ]
    },
    {
        "id": "e330d238a52c706a",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "ERROR",
        "func": "msg.error1 = flow.get(\"sma\") - msg.trueval;\nmsg.error2 = flow.get(\"avg_method\") - msg.trueval;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 480,
        "wires": [
            [
                "c6835568503fd142",
                "8a0127b2e6bfd634"
            ]
        ]
    },
    {
        "id": "7cbf4293e5dc2724",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "TOPIC1",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Simple Moving Average error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 360,
        "wires": [
            [
                "a69b9a743d88753e"
            ]
        ]
    },
    {
        "id": "ebab211a58af9efd",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "TOPIC2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Average Method error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 500,
        "wires": [
            [
                "a69b9a743d88753e"
            ]
        ]
    },
    {
        "id": "c6835568503fd142",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Set payload1",
        "func": "msg.payload = msg.error1;\nmsg.payload = Math.round(msg.payload * 100) / 100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 420,
        "wires": [
            [
                "7cbf4293e5dc2724",
                "0479d39dbf7d9301"
            ]
        ]
    },
    {
        "id": "8a0127b2e6bfd634",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Set payload2",
        "func": "msg.payload = msg.error2;\nmsg.payload = Math.round(msg.payload * 100) / 100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "ebab211a58af9efd",
                "83a877b17ccff6a7"
            ]
        ]
    },
    {
        "id": "3eb1998e8f7315b3",
        "type": "ui_gauge",
        "z": "e00eee033140acab",
        "name": "",
        "group": "6c714a8654f0bc7c",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Measured data",
        "label": "cm",
        "format": "{{value}}",
        "min": "2",
        "max": "100",
        "colors": [
            "#03b017",
            "#03b017",
            "#03b017"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 880,
        "y": 140,
        "wires": []
    },
    {
        "id": "20f1e95a71896bc7",
        "type": "ui_gauge",
        "z": "e00eee033140acab",
        "name": "",
        "group": "6c714a8654f0bc7c",
        "order": 4,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "SMA",
        "label": "cm",
        "format": "{{value}}",
        "min": "2",
        "max": "100",
        "colors": [
            "#ef1515",
            "#ef1515",
            "#ef1515"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 650,
        "y": 620,
        "wires": []
    },
    {
        "id": "1c45574e4573da00",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Round",
        "func": "msg.payload = Math.round(msg.payload * 100) / 100;\nflow.set(\"avg_k\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "2f615e69dadeecdf"
            ]
        ]
    },
    {
        "id": "2f615e69dadeecdf",
        "type": "ui_gauge",
        "z": "e00eee033140acab",
        "name": "AVG",
        "group": "6c714a8654f0bc7c",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "AVG",
        "label": "cm",
        "format": "{{value}}",
        "min": "2",
        "max": "100",
        "colors": [
            "#0f17ff",
            "#0f17ff",
            "#0f17ff"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "0479d39dbf7d9301",
        "type": "ui_gauge",
        "z": "e00eee033140acab",
        "name": "",
        "group": "6c714a8654f0bc7c",
        "order": 2,
        "width": 2,
        "height": 1,
        "gtype": "gage",
        "title": "Error 1",
        "label": "cm",
        "format": "{{value}}",
        "min": "-5",
        "max": "5",
        "colors": [
            "#ef1515",
            "#ef1515",
            "#ef1515"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 810,
        "y": 360,
        "wires": []
    },
    {
        "id": "83a877b17ccff6a7",
        "type": "ui_gauge",
        "z": "e00eee033140acab",
        "name": "",
        "group": "6c714a8654f0bc7c",
        "order": 3,
        "width": 2,
        "height": 1,
        "gtype": "gage",
        "title": "Error 2",
        "label": "cm",
        "format": "{{value}}",
        "min": "-5",
        "max": "5",
        "colors": [
            "#0f17ff",
            "#0f17ff",
            "#0f17ff"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "933af9e4e9671bfc",
        "type": "mqtt out",
        "z": "e00eee033140acab",
        "name": "",
        "topic": "allow",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "27237f8eab3d7eb5",
        "x": 250,
        "y": 740,
        "wires": []
    },
    {
        "id": "6b896e96578fc2fc",
        "type": "ui_switch",
        "z": "e00eee033140acab",
        "name": "",
        "label": "Measurement",
        "tooltip": "",
        "group": "37653b90a5c83d94",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "abc",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "Green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "White",
        "animate": false,
        "className": "",
        "x": 240,
        "y": 680,
        "wires": [
            [
                "933af9e4e9671bfc",
                "3f10af16f2406658",
                "1815b13d2ee3dc44"
            ]
        ]
    },
    {
        "id": "95d4be3f5137a7d6",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Get true value and sample",
        "func": "if(msg.payload === true){\n    msg.trueval = \"Null\";\n    msg.sample = 30;\n}else{\n    m = msg.payload;\n    trueval = Object.keys(m)[0];\n    sample = Object.keys(m)[1];\n    msg.trueval = m[trueval];\n    msg.sample = m[sample];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 760,
        "wires": [
            [
                "18debca92a7ded10"
            ]
        ]
    },
    {
        "id": "18debca92a7ded10",
        "type": "change",
        "z": "e00eee033140acab",
        "name": "Set flow and true value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "trueval",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mau",
                "pt": "flow",
                "to": "sample",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "truevalue",
                "pt": "flow",
                "to": "trueval",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 680,
        "wires": [
            [
                "69fcd32764018d5a"
            ]
        ]
    },
    {
        "id": "69fcd32764018d5a",
        "type": "ui_text",
        "z": "e00eee033140acab",
        "group": "37653b90a5c83d94",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "True value:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "1815b13d2ee3dc44",
        "type": "ui_form",
        "z": "e00eee033140acab",
        "name": "Set True value and k",
        "label": "",
        "group": "37653b90a5c83d94",
        "order": 5,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "True value",
                "value": "AA",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Sample",
                "value": "BB",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "AA": "",
            "BB": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "95d4be3f5137a7d6"
            ]
        ]
    },
    {
        "id": "3f10af16f2406658",
        "type": "ui_button",
        "z": "e00eee033140acab",
        "name": "",
        "group": "37653b90a5c83d94",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 760,
        "wires": [
            [
                "95d4be3f5137a7d6"
            ]
        ]
    },
    {
        "id": "20640b21c1c00704",
        "type": "status",
        "z": "e00eee033140acab",
        "name": "Check Connection MQTT",
        "scope": [
            "09d376b49cf54e17"
        ],
        "x": 310,
        "y": 820,
        "wires": [
            [
                "dfb166dea61a5d96"
            ]
        ]
    },
    {
        "id": "dfb166dea61a5d96",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "MQTT Connection Var",
        "func": "var mqtt_status = msg.status;\nflow.set(\"mqtt_status\",mqtt_status);\nmsg.payload = mqtt_status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "12d3acd5d3c68e9d",
        "type": "function",
        "z": "e00eee033140acab",
        "name": "Read Status MQTT",
        "func": "var status = flow.get(\"mqtt_status\");\nif(status.text == \"node-red:common.status.connecting\"){\n    msg.payload = \"Connection Failed\";\n    \n}\nif(status.text == \"node-red:common.status.connected\"){\n    msg.payload = \"Connected\";\n   \n}\nif(status.text == \"node-red:common.status.disconnected\"){\n    msg.payload = \"Disconnected\";\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 880,
        "wires": [
            [
                "6be5003e22989f91"
            ]
        ]
    },
    {
        "id": "d2ba8002e4ce5206",
        "type": "inject",
        "z": "e00eee033140acab",
        "name": "1s",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 880,
        "wires": [
            [
                "12d3acd5d3c68e9d"
            ]
        ]
    },
    {
        "id": "6be5003e22989f91",
        "type": "ui_text",
        "z": "e00eee033140acab",
        "group": "37653b90a5c83d94",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Connection Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 690,
        "y": 880,
        "wires": []
    }
]
